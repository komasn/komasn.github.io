<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-08-07T10:19:39+09:00</updated><id>/feed.xml</id><title type="html">備忘録</title><subtitle>conoha vpsのレンタルをはじめました。ubuntu nginx jekyllを組み合わせてWEBサイトを公開する ことが当面の目標です。現在はgithubで公開しています。</subtitle><entry><title type="html">東京都コロナ特設サイトから始まる学習</title><link href="/2021/08/07/covid19-linux.html" rel="alternate" type="text/html" title="東京都コロナ特設サイトから始まる学習" /><published>2021-08-07T09:00:00+09:00</published><updated>2021-08-07T09:00:00+09:00</updated><id>/2021/08/07/covid19-linux</id><content type="html" xml:base="/2021/08/07/covid19-linux.html">&lt;p&gt;&lt;a href=&quot;https://github.com/tokyo-metropolitan-gov/covid19&quot;&gt;東京都新型コロナウィルス感染症対策サイト&lt;/a&gt;がgithubで公開されているので、香川県版を作ってみたいなと思ったのですが、&lt;a href=&quot;https://github.com/codeforkagawa/covid19&quot;&gt;すでに存在&lt;/a&gt;していました。すごい。&lt;br /&gt;
私がgithubの使い方についてほとんど理解していないのですが、&lt;a href=&quot;https://qiita.com/FPC_COMMUNITY/items/b9cc072813dc2231b2b2&quot;&gt;東京都 新型コロナウイルス対策サイトへの貢献方法を解説&lt;/a&gt;を参考にしながら手をつけてみたいと思います。&lt;/p&gt;

&lt;p&gt;東京都 新型コロナウイルス対策サイトへの貢献方法を解説の記事を作成された方は高校生だとのことで、ただただ驚くばかりです。&lt;br /&gt;
非常に記事の内容がわかりやすく勉強になります。&lt;/p&gt;

&lt;p&gt;githubからcloneしたリポジトリをローカル環境で動作させるため、npm, nodejs, yarnをインストールしました。&lt;/p&gt;

&lt;p&gt;apt install でnodejsをインストールしたところ、yarn の実行時にnodejsのバージョンエラーが発生しました。&lt;br /&gt;
npm n をインストールしてnodejsをアップデートすることで解決しました。stableにアップデートしました。&lt;/p&gt;

&lt;p&gt;以上により、動作するところまでは行きました。&lt;br /&gt;
jekyllのときにも思ったのですが、ローカル環境でサーバが立ち上がるとなんだか感動します。&lt;br /&gt;
それと同時に思うのはlinuxの基本的な知識が自分に欠落しているので、インターネットで調べて情報を理解できずに実行しているところが非常に多いです。&lt;br /&gt;
&lt;a href=&quot;https://www.amazon.co.jp/gp/product/4798166162/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4798166162&amp;amp;linkCode=as2&amp;amp;tag=lpijapan01-22&amp;amp;linkId=ebd38d134cce9c7638dc45a917c25942&quot;&gt;linucのレベル１の書籍&lt;/a&gt;を購入したので、読み進めて行こうと思います。&lt;/p&gt;

&lt;p&gt;主に閲覧したWEBサイト様は以下の通りです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tokyo-metropolitan-gov/covid19&quot;&gt;東京都新型コロナウィルス感染症対策サイト&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/codeforkagawa/covid19&quot;&gt;香川県新型コロナウィルス感染症対策サイト&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://qiita.com/FPC_COMMUNITY/items/b9cc072813dc2231b2b2&quot;&gt;東京都 新型コロナウイルス対策サイトへの貢献方法を解説&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Npm_(%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E7%AE%A1%E7%90%86%E3%83%84%E3%83%BC%E3%83%AB)&quot;&gt;npm (パッケージ管理ツール)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://classic.yarnpkg.com/en/&quot;&gt;yarn公式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://parashuto.com/rriver/tools/updating-node-js-and-npm&quot;&gt;Node.jsとnpmをアップデートする方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>mgrsn</name></author><summary type="html">東京都新型コロナウィルス感染症対策サイトがgithubで公開されているので、香川県版を作ってみたいなと思ったのですが、すでに存在していました。すごい。 私がgithubの使い方についてほとんど理解していないのですが、東京都 新型コロナウイルス対策サイトへの貢献方法を解説を参考にしながら手をつけてみたいと思います。</summary></entry><entry><title type="html">今後の目標</title><link href="/2021/08/04/mokuhyou.html" rel="alternate" type="text/html" title="今後の目標" /><published>2021-08-04T22:00:00+09:00</published><updated>2021-08-04T22:00:00+09:00</updated><id>/2021/08/04/mokuhyou</id><content type="html" xml:base="/2021/08/04/mokuhyou.html">&lt;p&gt;conoha vps を契約しました。&lt;br /&gt;
テンプレートで素晴らしいプロダクトが公開されています。&lt;br /&gt;
今後の目標として、ブログ運用をvpsで行いたいです。&lt;br /&gt;
現在想定している運用としては、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;githubのプライベートリポジトリでjekyllプロダクトを管理する&lt;/li&gt;
  &lt;li&gt;更新はPC、スマホ(working copyなど)で行う&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.conoha.jp/vps/&quot;&gt;conoha vps&lt;/a&gt;のubuntuにnginxとjekyllをインストールする&lt;/li&gt;
  &lt;li&gt;vpsからgithubのプライベートリポジトリをpullする&lt;/li&gt;
  &lt;li&gt;vps上でjekyll b する&lt;/li&gt;
  &lt;li&gt;_siteを公開用ディレクトリにcopyする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;煩雑な手順のような気がしますが…&lt;br /&gt;
一旦上記の運用を目指してみます&lt;/p&gt;

&lt;p&gt;ubuntu(popos)、Atom、git、nginx、jekyllの組み合わせはなんとなく自分にあってる気がします。&lt;/p&gt;

&lt;p&gt;サーバもraspbery piで運用できたら楽しそうですが、どこまでできるかな。&lt;br /&gt;
それ以前に、jekyllでテーマを変更する方法を理解していません。&lt;br /&gt;
_config.ymlを編集すればいいのか？？&lt;br /&gt;
Gemfileを編集すればいいのか？？&lt;/p&gt;

&lt;p&gt;サーバ運用云々よりも jekyll-theme-slate を適用させることに四苦八苦している状況です。&lt;/p&gt;</content><author><name>mgrsn</name></author><summary type="html">conoha vps を契約しました。 テンプレートで素晴らしいプロダクトが公開されています。 今後の目標として、ブログ運用をvpsで行いたいです。 現在想定している運用としては、</summary></entry><entry><title type="html">記事の追加</title><link href="/2021/08/03/add-post.html" rel="alternate" type="text/html" title="記事の追加" /><published>2021-08-03T12:30:00+09:00</published><updated>2021-08-03T12:30:00+09:00</updated><id>/2021/08/03/add-post</id><content type="html" xml:base="/2021/08/03/add-post.html">&lt;p&gt;記事を追加してみます。&lt;br /&gt;
iPadからの投稿を試してみようと思います。&lt;br /&gt;
iPadOS版のWorking Copyで編集してGithubにpushします。&lt;br /&gt;
プレビュー確認できないのが辛い気がします。&lt;br /&gt;
編集できないことはないですが，やはりパソコンは必須ですね。&lt;br /&gt;
マークダウン記述方式をサポートしてくれるエディタがiPadOSで存在しないか調べてみようと思います。&lt;/p&gt;</content><author><name>mgrsn</name></author><summary type="html">記事を追加してみます。 iPadからの投稿を試してみようと思います。 iPadOS版のWorking Copyで編集してGithubにpushします。 プレビュー確認できないのが辛い気がします。 編集できないことはないですが，やはりパソコンは必須ですね。 マークダウン記述方式をサポートしてくれるエディタがiPadOSで存在しないか調べてみようと思います。</summary></entry><entry><title type="html">ブログ作成</title><link href="/2021/08/02/firstpost.html" rel="alternate" type="text/html" title="ブログ作成" /><published>2021-08-02T22:00:00+09:00</published><updated>2021-08-02T22:00:00+09:00</updated><id>/2021/08/02/firstpost</id><content type="html" xml:base="/2021/08/02/firstpost.html">&lt;p&gt;githubを使ってブログを作ってみようと思います。&lt;br /&gt;
githubとjekyllを組み合わせています。&lt;br /&gt;
参考にさせて頂いたサイト&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb-ja.github.io/&quot;&gt;http://jekyllrb-ja.github.io/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://simple-it-life.com/2020/08/16/migrate-blog-to-github/&quot;&gt;Jekyllの使い方 GitHub Pagesを使ってブログサイトを公開する方法&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://masamichi.me/development/2020/05/26/github-pages-blog-part2-jekyll.html&quot;&gt;GitHub Pagesで無料ブログを作成する - Part2 Jekyllを使ってみる&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;私の自宅パソコン環境はこんな感じです&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;PC:dell studio 1537&lt;/li&gt;
  &lt;li&gt;CPU:Core™2 Duo CPU P8400&lt;/li&gt;
  &lt;li&gt;メモリ:4GB&lt;/li&gt;
  &lt;li&gt;OS:Pop!_OS 20.04 LTS&lt;/li&gt;
  &lt;li&gt;editor:Atom&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2009年に購入したパソコンを現在も使用しています。&lt;br /&gt;
HDDをSSDにした以外は何もしていません。何年使えるんだろ。&lt;/p&gt;</content><author><name>mgrsn</name></author><summary type="html">githubを使ってブログを作ってみようと思います。 githubとjekyllを組み合わせています。 参考にさせて頂いたサイト</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2021/08/01/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-08-01T10:13:23+09:00</published><updated>2021-08-01T10:13:23+09:00</updated><id>/jekyll/update/2021/08/01/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2021/08/01/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>